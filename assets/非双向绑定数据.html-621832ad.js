const e=JSON.parse('{"key":"v-1ef2adf5","path":"/Vue2/%E9%9D%9E%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A%E6%95%B0%E6%8D%AE.html","title":"非双向绑定数据","lang":"zh-CN","frontmatter":{"description":"非双向绑定数据 长列表以及不需要数据劫持的场景 Vue 会通过 Object.defineProperty 对数据进行劫持，来实现视图响应数据的变化，然而有些时候我们的组件就是纯粹的数据展示，不会有任何改变，我们就不需要 Vue 来劫持我们的数据，在大量数据展示的情况下，这能够很明显的减少组件初始化的时间，那如何禁止 Vue 劫持我们的数据呢？ 可以通过 Object.freeze() (冻结) 方法来冻结一个对象，一旦被冻结的对象就再也不能被修改了。或者可以用 Object.seal() (密封)","head":[["meta",{"property":"og:url","content":"https://674948122.github.io/doc/Vue2/%E9%9D%9E%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A%E6%95%B0%E6%8D%AE.html"}],["meta",{"property":"og:title","content":"非双向绑定数据"}],["meta",{"property":"og:description","content":"非双向绑定数据 长列表以及不需要数据劫持的场景 Vue 会通过 Object.defineProperty 对数据进行劫持，来实现视图响应数据的变化，然而有些时候我们的组件就是纯粹的数据展示，不会有任何改变，我们就不需要 Vue 来劫持我们的数据，在大量数据展示的情况下，这能够很明显的减少组件初始化的时间，那如何禁止 Vue 劫持我们的数据呢？ 可以通过 Object.freeze() (冻结) 方法来冻结一个对象，一旦被冻结的对象就再也不能被修改了。或者可以用 Object.seal() (密封)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-25T10:30:14.000Z"}],["meta",{"property":"article:author","content":"Mr.PDG"}],["meta",{"property":"article:modified_time","content":"2023-04-25T10:30:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"非双向绑定数据\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-25T10:30:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.PDG\\",\\"url\\":\\"https://674948122.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"长列表以及不需要数据劫持的场景","slug":"长列表以及不需要数据劫持的场景","link":"#长列表以及不需要数据劫持的场景","children":[]}],"git":{"createdTime":1682418614000,"updatedTime":1682418614000,"contributors":[{"name":"pandegong","email":"674948122@qq.com","commits":1}]},"readingTime":{"minutes":0.62,"words":186},"filePathRelative":"Vue2/非双向绑定数据.md","localizedDate":"2023年4月25日","excerpt":"<h1> 非双向绑定数据</h1>\\n<h2> 长列表以及不需要数据劫持的场景</h2>\\n<p><code>Vue</code> 会通过 <code>Object.defineProperty</code> 对数据进行劫持，来实现视图响应数据的变化，然而有些时候我们的组件就是纯粹的数据展示，不会有任何改变，我们就不需要 <code>Vue</code> 来劫持我们的数据，在大量数据展示的情况下，这能够很明显的减少组件初始化的时间，那如何禁止 <code>Vue</code> 劫持我们的数据呢？</p>\\n<p>可以通过 <code>Object.freeze()</code> (冻结) 方法来冻结一个对象，一旦被冻结的对象就再也不能被修改了。或者可以用 <code>Object.seal()</code> (密封)</p>","autoDesc":true}');export{e as data};
