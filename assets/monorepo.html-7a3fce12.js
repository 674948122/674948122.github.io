import{_ as i,X as p,Y as t,$ as n,a0 as s,a1 as o,Z as a,E as c}from"./framework-cddc4983.js";const l={},d=a(`<h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h2><p><code>monorepo</code>是管理多个包的项目，可以理解为一个项目管理多个项目，这些项目可以是相互独立的，也可以是相互依赖的。</p><h2 id="优点" tabindex="-1"><a class="header-anchor" href="#优点" aria-hidden="true">#</a> 优点</h2><ol><li>代码复用非常简单 在 Monorepo 中，由于我们所有的代码都在同一个项目下，如果我们需要引用其他一些已经定义过的功能模块，会非常方便。</li></ol><p>我们只需要将复用频率高的代码，单独抽离出来成为一个 shared 之类的项目，那么其他所有的项目都只需要直接引用这个项目下的代码就可以了。而不用将这个项目重新打包，再在其他项目中使用。</p><ol start="2"><li><p>简化依赖管理 由于我们是在同一个项目下，因此对于第三方依赖的管理也会简化很多，像是之前多个项目可能有一些相同的第三方依赖包，每个项目都需要下载一遍，而我们使用 Monorepo 的框架重构项目之后，这些依赖包就可以避免重复下载，同时也能通过配置在不同的项目之间复用。</p></li><li><p>原子提交能让重构全局特性更容易 当我们的一个库会影响到很多个项目时，修改了这个库之后，以往我们需要一个一个去更新对应受到影响的项目，进行相应的兼容适配工作，而修改一个问题又可能导致另外一个兼容问题。</p></li></ol><p>如果受影响的项目数量很大的话，简直是人间地狱。甚至即使你花了很大精力去更新，也不一定就能保证自己没有遗漏。</p><p>而在 Monorepo 中，你的每次提交都会自动变更到受影响的项目中，也能通过编译时的错误检测机制，及时修正对应的代码，避免依赖兼容性问题的重复繁琐处理。</p><ol start="4"><li>跨组合作更方便 由于 Monorepo 的项目是由一个一个独立的项目组成的，因此我们可以在每个子项目中使用自己的工作流和技术架构，即使你将几个跨端跨语言的项目都放在一起也完全可以！</li></ol><p>所以在跨组合作的情况下，通过同一个Monorepo来开发，能省去大量中间沟通和协作的花费。</p><ol start="5"><li>大影响范围的重构 如果我们的某个功能代码---比如一个功能库---被很多个项目引用，按照多库开发的形式，我们就需要每个受到影响的项目都进行相应的更新，但是即使这样，也避免不了某个项目漏掉了处理，导致项目并没有完全统一，新的特性没有应用上。</li></ol><p>而 Monorepo 项目则是会即时将所有的变更应用到受影响的项目，确保最新的特性应用到了我们的项目中。</p><h2 id="缺点" tabindex="-1"><a class="header-anchor" href="#缺点" aria-hidden="true">#</a> 缺点</h2><ol><li>缺乏每个项目的权限控制 Monorepo 由于将所有的子项目集成在同一个大的项目中，对于管理者来说，权限控制会变得很不方便，开发者每次拉取代码都会拉取所有的代码，无法进行精准的权限控制。</li></ol><p>不过现在部分主流 Monorepo 框架都进行了这方面的功能开发。</p><ol start="2"><li><p>版本信息杂糅不清晰 同样由于所有功能都在同一个项目中，就会导致所有功能的修改都在同一个git下，不便于回溯和查找对应的历史记录。</p></li><li><p>大项目在Git上表现很差 代码增多之后，整个git项目会变得越来越大，开发者拉取代码的时间也会变得更长。</p></li></ol><p>不过针对这个问题，各家使用 Monorepo 的公司，要么自己开发了一套版本控制系统，要么针对现在的版本控制系统进行了优化。</p><ol start="4"><li>构建时间更长 由于有很多个项目和功能模块，Monorepo 在构建时势必会花费更多的时间。</li></ol><p>而在这方面做的最好的应该是 Bazel，它特别针对超大型的 Monorepo 项目进行了构建优化。</p><h2 id="项目结构" tabindex="-1"><a class="header-anchor" href="#项目结构" aria-hidden="true">#</a> 项目结构</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>├── README.md
├── lerna.json
├── package.json
├── utils              <span class="token comment"># 工具函数</span>
├── components         <span class="token comment"># 公共组件</span>
├── packages           <span class="token comment"># 子项目</span>
│   ├── project-a           <span class="token comment"># 项目一</span>
│   │   ├── README.md
│   │   ├── babel.config.js
│   │   ├── dist
│   │   ├── package.json
│   │   ├── public
│   │   ├── src
│   │   ├── tests
│   │   └── vue.config.js
│   └── project-b           <span class="token comment"># 项目二</span>
│       ├── README.md
│       ├── babel.config.js
│       ├── dist
│       ├── package.json
│       ├── public
│       ├── src
│       ├── tests
│       └── vue.config.js
└── yarn.lock
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="实施过程" tabindex="-1"><a class="header-anchor" href="#实施过程" aria-hidden="true">#</a> 实施过程</h2><h3 id="创建项目" tabindex="-1"><a class="header-anchor" href="#创建项目" aria-hidden="true">#</a> 创建项目</h3><p>创建一个文件夹取名<code>monorepo-workspace</code>。</p><h3 id="lerna" tabindex="-1"><a class="header-anchor" href="#lerna" aria-hidden="true">#</a> lerna</h3>`,25),r=n("code",null,"Lerna",-1),u={href:"https://www.lernajs.cn/",target:"_blank",rel:"noopener noreferrer"},m=a(`<p>安装<code>lerna</code>。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">--global</span> lerna
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="初始化项目" tabindex="-1"><a class="header-anchor" href="#初始化项目" aria-hidden="true">#</a> 初始化项目</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> monorepo-workspace
lerna init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这时你的项目结构应该是这样的。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>├── README.md
├── lerna.json
├── package.json
└── packages
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建配置文件" tabindex="-1"><a class="header-anchor" href="#创建配置文件" aria-hidden="true">#</a> 创建配置文件</h3><p>根目录新建文件<code>pnpm-workspace.yaml</code></p><p>编辑文件内容。</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">packages</span><span class="token punctuation">:</span>
  <span class="token comment"># all packages or sub projects in direct subdirs of packages/</span>
  <span class="token punctuation">-</span> <span class="token string">&#39;packages/*&#39;</span>
  <span class="token comment"># all packages in subdirs of components/</span>
  <span class="token punctuation">-</span> <span class="token string">&#39;components/**&#39;</span>
  <span class="token punctuation">-</span> <span class="token string">&#39;apis/**&#39;</span>
  <span class="token punctuation">-</span> <span class="token string">&#39;utils/**&#39;</span>
  <span class="token punctuation">-</span> <span class="token string">&#39;mixins/**&#39;</span>
  <span class="token punctuation">-</span> <span class="token string">&#39;commom-libs/**&#39;</span>
  <span class="token comment"># exclude packages that are inside test directories</span>
  <span class="token punctuation">-</span> <span class="token string">&#39;!**/test/**&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建子项目" tabindex="-1"><a class="header-anchor" href="#创建子项目" aria-hidden="true">#</a> 创建子项目</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> packages
<span class="token function">pnpm</span> create vite
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>依次创建项目<code>project-a</code>、<code>project-b</code>。</p><h3 id="创建utils分包" tabindex="-1"><a class="header-anchor" href="#创建utils分包" aria-hidden="true">#</a> 创建utils分包</h3><p>回到项目根目录，运行命令。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> create vite
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>删除无用文件，比如<code>index.html</code>、<code>main.js</code>、<code>App.vue</code>之类的。</p><p>创建文件<code>/utils/src/main.js</code>，暴露函数<code>unique</code>。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 数组去重</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">unique</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建文件<code>/utils/index.js</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> unique <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./src/main&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> mathUtils <span class="token operator">=</span> <span class="token punctuation">{</span>
    unique<span class="token punctuation">,</span>
    <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&#39;我是来自utils分包的msg&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改文件<code>/utils/package.json</code>。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>   
    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;@monorepo/utils&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;index.js&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="子项目引入utils分包" tabindex="-1"><a class="header-anchor" href="#子项目引入utils分包" aria-hidden="true">#</a> 子项目引入utils分包</h3><p>进入<code>project-a</code>项目，安装依赖。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> <span class="token function">add</span> @monorepo/utils
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用utils分包里的函数。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> mathUtils <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@monorepo/utils&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>mathUtils<span class="token punctuation">.</span><span class="token function">unique</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建components分包" tabindex="-1"><a class="header-anchor" href="#创建components分包" aria-hidden="true">#</a> 创建components分包</h3><p>回到项目根目录，运行命令。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> create vite
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>创建一个vue组件<code>/components/src/components/DemoComponent.vue</code></p><p>创建文件<code>/components/index.js</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> DemoComponent <span class="token keyword">from</span> <span class="token string">&quot;./src/components/DemoComponent.vue&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    DemoComponent<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改文件<code>/components/package.json</code>。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>   
    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;@monorepo/components&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;index.js&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="子项目引入components分包" tabindex="-1"><a class="header-anchor" href="#子项目引入components分包" aria-hidden="true">#</a> 子项目引入components分包</h3><p>进入<code>project-a</code>项目，安装依赖。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> <span class="token function">add</span> @monorepo/components
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用components分包里的组件</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> mathComponents <span class="token keyword">from</span> <span class="token string">&#39;@monorepo/components&#39;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> DemoComponent <span class="token punctuation">}</span> <span class="token operator">=</span> mathComponents

</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DemoComponent</span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="结语" tabindex="-1"><a class="header-anchor" href="#结语" aria-hidden="true">#</a> 结语</h2><p>至此,关于项目中引入<code>monorepo</code>模块就完成了,其它分包则根据具体业务需要自行扩展</p><h2 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令" aria-hidden="true">#</a> 常用命令</h2><h3 id="pnpm" tabindex="-1"><a class="header-anchor" href="#pnpm" aria-hidden="true">#</a> pnpm</h3><h4 id="运行" tabindex="-1"><a class="header-anchor" href="#运行" aria-hidden="true">#</a> 运行</h4><p>需要进入到对应的子项目目录下运行。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> run dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者在根目录下运行。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> run <span class="token parameter variable">--filter</span> ./packages/project-a dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="lerna-1" tabindex="-1"><a class="header-anchor" href="#lerna-1" aria-hidden="true">#</a> lerna</h3><h4 id="运行-1" tabindex="-1"><a class="header-anchor" href="#运行-1" aria-hidden="true">#</a> 运行</h4><p>根目录下运行，会同时运行所有子项目的<code>dev</code>命令。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>lerna run dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,54);function v(k,b){const e=c("ExternalLinkIcon");return p(),t("div",null,[d,n("p",null,[r,s(" 是一个管理工具，用于管理包含多个软件包（package）的 JavaScript 项目。"),n("a",u,[s("文档地址"),o(e)])]),m])}const g=i(l,[["render",v],["__file","monorepo.html.vue"]]);export{g as default};
