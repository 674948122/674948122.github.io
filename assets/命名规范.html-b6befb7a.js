import{_ as a,Z as s,$ as e,a1 as n}from"./framework-4b017f08.js";const c="/doc/assets/images/174cdb3e4ec4d71a.png",t="/doc/assets/images/174cdb61e29617c4.png",o={},d=n(`<h1 id="命名规范" tabindex="-1"><a class="header-anchor" href="#命名规范" aria-hidden="true">#</a> 命名规范</h1><h2 id="蛇形命名法-snake-case" tabindex="-1"><a class="header-anchor" href="#蛇形命名法-snake-case" aria-hidden="true">#</a> 蛇形命名法 - <code>snake_case</code></h2><p>用于定义常量</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">FILE_NAME</span> <span class="token operator">=</span> <span class="token string">&#39;asdasd&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> word_pair <span class="token operator">=</span> <span class="token string">&#39;sdfsd&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="小骆驼拼写法-lowercamelcase" tabindex="-1"><a class="header-anchor" href="#小骆驼拼写法-lowercamelcase" aria-hidden="true">#</a> 小骆驼拼写法 - <code>lowerCamelCase</code></h2><p>用于变量、函数、视图文件、JS文件、CSS、Sass、SCSS、Less等文件命名</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> userName <span class="token operator">=</span> <span class="token string">&#39;张三&#39;</span>
<span class="token keyword">let</span> myFile <span class="token operator">=</span> <span class="token string">&#39;sfsdfsdfsf&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="大骆驼拼写法-uppercamelcase" tabindex="-1"><a class="header-anchor" href="#大骆驼拼写法-uppercamelcase" aria-hidden="true">#</a> 大骆驼拼写法 - <code>UpperCamelCase</code></h2><p>用于组件命名</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> FileName <span class="token operator">=</span> <span class="token string">&#39;saadasda&#39;</span>
<span class="token keyword">let</span> WordPair <span class="token operator">=</span> <span class="token string">&#39;sddfsdfs&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="串式命名-kebab-case" tabindex="-1"><a class="header-anchor" href="#串式命名-kebab-case" aria-hidden="true">#</a> 串式命名 - <code>kebab-case</code></h2><p>用于class命名</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app-container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
<span class="token selector">.app-container</span> <span class="token punctuation">{</span> <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="建议" tabindex="-1"><a class="header-anchor" href="#建议" aria-hidden="true">#</a> 建议</h2><ul><li>命名应该清晰简洁，避免使用缩写、拼音等难以理解的命名方式。</li><li>应该避免使用 <code>var</code>，使用 <code>const</code> 和 <code>let</code> 替代。</li><li>对于布尔值的变量，应该使用肯定的意义来命名，例如 <code>isSuccessful</code>，而不是 <code>notSuccessful</code>。</li><li>对于有意义的变量名，应该使用 <code>lowerCamelCase</code> 命名，例如 <code>customerName</code>。</li><li>在变量、函数和文件名等命名中，应该避免使用单词缩写，除非是广为接受的缩写方式，例如 <code>url</code>。</li><li>对于组件命名，应该使用 <code>UpperCamelCase</code> 命名，例如 <code>MyComponent</code>。</li><li>在使用 <code>kebab-case</code> 命名时，应该使用短横线分隔，例如 <code>app-container</code>，而不是下划线或其他字符分隔。</li><li>文件名应该使用有意义的名称，描述文件的功能和作用，而不是使用无意义的数字、日期、版本号等。</li><li><code>CSS</code>类名应该使用语义化的名称，例如 <code>.card</code>、<code>.button</code>、<code>.header</code>，而不是使用样式描述，例如 <code>.red-text</code>、<code>.large-font</code>。</li><li>在文件名和文件夹命名中，应该使用英文单词，避免使用中文或其他语言。</li></ul><h2 id="vscode双击选中class的方法" tabindex="-1"><a class="header-anchor" href="#vscode双击选中class的方法" aria-hidden="true">#</a> vscode双击选中class的方法</h2><figure><img src="`+c+'" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>输入框中输入<code>editor.wordseparators</code><img src="'+t+'" alt="图片" loading="lazy"></p><p>将下面选项中的<code>-</code>删除。</p>',19),l=[d];function p(i,r){return s(),e("div",null,l)}const k=a(o,[["render",p],["__file","命名规范.html.vue"]]);export{k as default};
