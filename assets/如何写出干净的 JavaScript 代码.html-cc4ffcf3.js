const e=JSON.parse(`{"key":"v-e4e7f3dc","path":"/Eslint%E7%9B%B8%E5%85%B3/%E5%A6%82%E4%BD%95%E5%86%99%E5%87%BA%E5%B9%B2%E5%87%80%E7%9A%84%20JavaScript%20%E4%BB%A3%E7%A0%81.html","title":"如何写出干净的 JavaScript 代码","lang":"zh-CN","frontmatter":{"description":"如何写出干净的 JavaScript 代码 1. 变量 使用有意义的名称 变量的名称应该是可描述，有意义的， JavaScript 变量都应该采用驼峰式大小写 ( camelCase ) 命名。 // Don't ❌ const foo = \\"JDoe@example.com\\"; const bar = \\"John\\"; const age = 23; const qux = true; // Do ✅ const email = \\"John@example.com\\"; const firstName = \\"John\\"; const age = 23; const isActive = true","head":[["meta",{"property":"og:url","content":"https://674948122.github.io/Eslint%E7%9B%B8%E5%85%B3/%E5%A6%82%E4%BD%95%E5%86%99%E5%87%BA%E5%B9%B2%E5%87%80%E7%9A%84%20JavaScript%20%E4%BB%A3%E7%A0%81.html"}],["meta",{"property":"og:title","content":"如何写出干净的 JavaScript 代码"}],["meta",{"property":"og:description","content":"如何写出干净的 JavaScript 代码 1. 变量 使用有意义的名称 变量的名称应该是可描述，有意义的， JavaScript 变量都应该采用驼峰式大小写 ( camelCase ) 命名。 // Don't ❌ const foo = \\"JDoe@example.com\\"; const bar = \\"John\\"; const age = 23; const qux = true; // Do ✅ const email = \\"John@example.com\\"; const firstName = \\"John\\"; const age = 23; const isActive = true"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-25T10:30:14.000Z"}],["meta",{"property":"article:author","content":"Mr.PDG"}],["meta",{"property":"article:modified_time","content":"2023-04-25T10:30:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"如何写出干净的 JavaScript 代码\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-25T10:30:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.PDG\\",\\"url\\":\\"https://674948122.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"1. 变量","slug":"_1-变量","link":"#_1-变量","children":[{"level":3,"title":"使用有意义的名称","slug":"使用有意义的名称","link":"#使用有意义的名称","children":[]},{"level":3,"title":"避免添加不必要的上下文","slug":"避免添加不必要的上下文","link":"#避免添加不必要的上下文","children":[]},{"level":3,"title":"避免硬编码值","slug":"避免硬编码值","link":"#避免硬编码值","children":[]}]},{"level":2,"title":"2. 函数","slug":"_2-函数","link":"#_2-函数","children":[{"level":3,"title":"使用有意义的名称","slug":"使用有意义的名称-1","link":"#使用有意义的名称-1","children":[]},{"level":3,"title":"使用默认参数","slug":"使用默认参数","link":"#使用默认参数","children":[]},{"level":3,"title":"限制参数的数量","slug":"限制参数的数量","link":"#限制参数的数量","children":[]},{"level":3,"title":"避免在一个函数中做太多事情","slug":"避免在一个函数中做太多事情","link":"#避免在一个函数中做太多事情","children":[]},{"level":3,"title":"避免使用布尔标志作为参数","slug":"避免使用布尔标志作为参数","link":"#避免使用布尔标志作为参数","children":[]},{"level":3,"title":"避免写重复的代码","slug":"避免写重复的代码","link":"#避免写重复的代码","children":[]},{"level":3,"title":"避免副作用","slug":"避免副作用","link":"#避免副作用","children":[]}]},{"level":2,"title":"3. 条件语句","slug":"_3-条件语句","link":"#_3-条件语句","children":[{"level":3,"title":"使用非负条件","slug":"使用非负条件","link":"#使用非负条件","children":[]},{"level":3,"title":"尽可能使用简写","slug":"尽可能使用简写","link":"#尽可能使用简写","children":[]},{"level":3,"title":"避免过多分支","slug":"避免过多分支","link":"#避免过多分支","children":[]},{"level":3,"title":"优先使用 map 而不是 switch 语句","slug":"优先使用-map-而不是-switch-语句","link":"#优先使用-map-而不是-switch-语句","children":[]},{"level":3,"title":"使用可选链接","slug":"使用可选链接","link":"#使用可选链接","children":[]}]},{"level":2,"title":"4.并发","slug":"_4-并发","link":"#_4-并发","children":[{"level":3,"title":"避免回调","slug":"避免回调","link":"#避免回调","children":[]}]},{"level":2,"title":"5. 错误处理","slug":"_5-错误处理","link":"#_5-错误处理","children":[{"level":3,"title":"处理抛出的错误和 reject 的 promise","slug":"处理抛出的错误和-reject-的-promise","link":"#处理抛出的错误和-reject-的-promise","children":[]}]},{"level":2,"title":"6.注释","slug":"_6-注释","link":"#_6-注释","children":[{"level":3,"title":"只注释业务逻辑","slug":"只注释业务逻辑","link":"#只注释业务逻辑","children":[]},{"level":3,"title":"使用版本控制","slug":"使用版本控制","link":"#使用版本控制","children":[]}]}],"git":{"createdTime":1682418614000,"updatedTime":1682418614000,"contributors":[{"name":"pandegong","email":"674948122@qq.com","commits":1}]},"readingTime":{"minutes":5.94,"words":1783},"filePathRelative":"Eslint相关/如何写出干净的 JavaScript 代码.md","localizedDate":"2023年4月25日","excerpt":"<h1> 如何写出干净的 JavaScript 代码</h1>\\n<h2> 1. 变量</h2>\\n<h3> 使用有意义的名称</h3>\\n<p>变量的名称应该是可描述，有意义的， <code>JavaScript</code> 变量都应该采用驼峰式大小写 ( <code>camelCase</code> ) 命名。</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token comment\\">// Don't ❌</span>\\n<span class=\\"token keyword\\">const</span> foo <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"JDoe@example.com\\"</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">const</span> bar <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"John\\"</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">const</span> age <span class=\\"token operator\\">=</span> <span class=\\"token number\\">23</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">const</span> qux <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">// Do ✅</span>\\n<span class=\\"token keyword\\">const</span> email <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"John@example.com\\"</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">const</span> firstName <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"John\\"</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">const</span> age <span class=\\"token operator\\">=</span> <span class=\\"token number\\">23</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">const</span> isActive <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">true</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{e as data};
