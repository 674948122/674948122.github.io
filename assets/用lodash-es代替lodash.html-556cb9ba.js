const e=JSON.parse(`{"key":"v-85c27306","path":"/%E6%89%93%E5%8C%85%E4%BC%98%E5%8C%96/%E7%94%A8lodash-es%E4%BB%A3%E6%9B%BFlodash.html","title":"用lodash-es代替lodash","lang":"zh-CN","frontmatter":{"description":"用lodash-es代替lodash lodash为了良好的浏览器兼容性, 它使用了旧版es5的模块语法; 而lodash-es则使用了es6的模块语法, 这让webpack之类的打包工具可以对其进行tree shake以删除为使用的代码来优化打包尺寸. 下面的代码直接从lodash中引入trimStart方法 import { trimStart } from 'lodash'; 如果使用的是webpack进行打包的话, 仅此一行就会导致打包尺寸增加 70+ kb 而如果把lodash改为lodash-es","head":[["meta",{"property":"og:url","content":"https://674948122.github.io/%E6%89%93%E5%8C%85%E4%BC%98%E5%8C%96/%E7%94%A8lodash-es%E4%BB%A3%E6%9B%BFlodash.html"}],["meta",{"property":"og:title","content":"用lodash-es代替lodash"}],["meta",{"property":"og:description","content":"用lodash-es代替lodash lodash为了良好的浏览器兼容性, 它使用了旧版es5的模块语法; 而lodash-es则使用了es6的模块语法, 这让webpack之类的打包工具可以对其进行tree shake以删除为使用的代码来优化打包尺寸. 下面的代码直接从lodash中引入trimStart方法 import { trimStart } from 'lodash'; 如果使用的是webpack进行打包的话, 仅此一行就会导致打包尺寸增加 70+ kb 而如果把lodash改为lodash-es"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-25T10:30:14.000Z"}],["meta",{"property":"article:author","content":"Mr.PDG"}],["meta",{"property":"article:modified_time","content":"2023-04-25T10:30:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"用lodash-es代替lodash\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-25T10:30:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.PDG\\",\\"url\\":\\"https://674948122.github.io/\\"}]}"]]},"headers":[],"git":{"createdTime":1682418614000,"updatedTime":1682418614000,"contributors":[{"name":"pandegong","email":"674948122@qq.com","commits":1}]},"readingTime":{"minutes":1.18,"words":355},"filePathRelative":"打包优化/用lodash-es代替lodash.md","localizedDate":"2023年4月25日","excerpt":"<h1> 用lodash-es代替lodash</h1>\\n<p>lodash为了良好的浏览器兼容性, 它使用了旧版es5的模块语法; 而lodash-es则使用了es6的模块语法, 这让webpack之类的打包工具可以对其进行tree shake以删除为使用的代码来优化打包尺寸.</p>\\n<p>下面的代码直接从lodash中引入trimStart方法</p>\\n<p><code>import { trimStart } from 'lodash';</code></p>\\n<p>如果使用的是webpack进行打包的话, 仅此一行就会导致打包尺寸增加 70+ kb</p>\\n<p>而如果把lodash改为lodash-es</p>","autoDesc":true}`);export{e as data};
